
// ------------------- subtree: Github 한개의 repository에 여러 프로젝트 올리기 -------------------//
< 특정 repo를 다른 repo의 하위로 옮기기 >
1. GitHub 웹사이트에서 부모 레포지토리 생성

2. Git bash 열기: 프로젝트 폴더에서 shift + 우클릭 > Open Git Bash here

3. 부모 레포지토리 복제
$git clone --mirror {부모 repo URL}
$git clone --mirror https://github.com/Narae-H/study-react.git

4. 복제된 부모 레포지토리로 이동
$cd {부모이름}

5. Subtree(자식 레포지토리)생성 - 자식 레포지토리가 github에 있는 경우만 해당. 로컬에 있다면 일반적인 방법으로 git commit/push 하면 됨. 
$git subtree add --prefix={부모 레포지토리에 저장할 폴더명} {자식 repo URL} {부모 원격 branch name}
$git subtree add --prefix=0-overview https://github.com/Narae-H/react-shop.git main

6. 푸시
git push

< 부모 repo에서 클론 --  아직 정확하지 않음 확인필요>
# 서버트리를 pull, push 할 때는 prefix 옵션을 주어서 해당 서브트리가 위치한 디렉토리 정보와
# 저장소, 브랜치를 주어서 pull, push를 수행하도록 한다.

1. origin 변수 생성
git remote add origin {부모 리포지토리 주소}

2. 부모 리포지토리 복제
git clone origin

3. pull/push 
# pull
git subtree pull --prefix {클론할 폴더} {원격 저장소의 이름} {브랜치 이름}
git subtree pull -prefix src/style-core core-upstream main


git subtree pull --prefix={local directory} {repo} {branch}

# push
git subtree push --prefix={local directory} {repo} {branch}


// ------------------- 코드 임시보관: git stash -------------------//
// 코드 임시보관용으로 stashfmf 써도 되고, 브랜치 만들어도 상관없음. 
git stash                   <- 방금 수정했던 코드가 임시 공간으로 이동
git stash list              <- 저장된 임시 공간 리스트 봄
git stash save '[comment]'  <- 코멘트 같이 적고 싶을 때문
git stash pop               <- 가장 최근에 보관했던 stash에 있는 코드 다시 불러오고 싶을 때
git stash drop [stash번호]  <- [stash번호] 에 있는 stash 삭제
git stash clar              <- 전부 다 삭제



// -------------------  배포하기 -------------------//
1. 배포 경로 설정
1) 일반 경로에 배포 (https://narae-h.github.io/)

2) 하위 경로에 배포(https://narae-h.github.io/blog)
 - 프로젝트에서 package.json 열기
 - "homepage": "[배포 할 사이트 경로]",   // ex) "homepage": "https://narae-h.github.io/blog",

2. 빌드
```
npm run build
```
빌드해야 작업 프로젝트 폴더 내에 build라는 폴더가 생성되고, 내가 짠 코드 전부를 .html, .css, .js 팡리로 변환해서 담아줌.

3. GitHub 접속 > 로그인

4. Repository 생성
1) 우측 상단 `+` 버튼 > `New Repository`
2) `Repository name`에 '[왼쪽에 뜨는 내 아이디].github.io' 입력 ex) narae-h.github.io
3) Initialize this repository with a README 선택 
4) Repository 생성

5. Repository에 파일 올리기
Repository 생성 후, 해당 repository에 `2.`에서 빌드했던 폴더 들어가서 파일 전부 다 드래그 앤 드롭 > Save

6. 최대 10분 후 확인가능
